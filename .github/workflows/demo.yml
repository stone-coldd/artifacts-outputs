name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs: # we can use this as identifier to refer in code afterwards.
      script-file: ${{ steps.publish.outputs.script-file }} #publish is the Id we set in step named publish js file name
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: publish js filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';' # | script-file is the name we set in outputs in line 22.
        # This code will produce a js file named index.d590f20c.js in dist/assets directory. To print this name we can use above linux command
        # 'script-file={}' >> $GITHUB_OUTPUT --> This $GITHUB_OUTPUT will check the key value pair (script-file={}) in outputs generated by github actions because of this code.

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with: 
          name: dist-files
          path: | #multiline string
            dist
            package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with: 
          name: dist-files # This name will be fetched from the name we assigned in upload artifacts step of build job.
      - name: Output contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
        # needs is a github context object. build is the name of job that the output name sript-file is declared. refer doc for more info
      - name: Deploy
        run: echo "Deploying..."